nameOverride: ""
fullnameOverride: ""

cert:
  enabled: true
  hosts:
    - host: q-pilot-dev.pegasus.quartechlab.com
    - host: q-pilot-dev.api.pegasus.quartechlab.com

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

###################
# Shared Variables
###################
name: q-pilot

enabled: true

service: {}

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

livenessProbe: {}
readinessProbe: {}
nodeSelector: {}
podAnnotations: {}
podLabels: {}
podSecurityContext:
  {}
  # fsGroup: 2000
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env: {}
volumeMounts: []
volumes: []
configs: {}
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

secretProviderClass:
  enabled: false
  # Retrieved from Terraform Output
  tenantId: "898fdc18-1bd2-4a3b-84a7-2efb988e3b90"
  # Retrieved from Terraform Output
  vaultName: "kvt-copilot-cnc-app-dev"
  # Retrieved from Terraform Output
  clientId: "c866d6a7-798e-4cfe-aafe-95ab5c43e190"

ingress:
  className: ""
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/request-timeout: "60"

tolerations: []
affinity: {}

###############
# FE Common values
###############

fe:
  service:
    type: ClusterIP
    port: 3000
  image: {}

  livenessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 10
    periodSeconds: 15

  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  env: []

  volumeMounts: []
  #   - name: caddyfile-volume
  #     mountPath: /etc/caddy/Caddyfile
  #     subPath: Caddyfile
  volumes: []
  # configs:
  #   - config/dev/Caddyfile
  resources: {}
  replicaCount: null
  autoscaling: {}
  secretProviderClass: {}
  ingress: {}
  tolerations: []
  affinity: {}

###############
# BE Common values
###############

be:
  service:
    type: ClusterIP
    port: 8080

  image: {}

  livenessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 15

  env:
    - name: "ASPNETCORE_URLS"
      value: "http://+:8080"
    - name: "ASPNETCORE_ENVIRONMENT"
      value: "Development"
    - name: "AZURE_TENANT_ID"
      value: "898fdc18-1bd2-4a3b-84a7-2efb988e3b90"
    - name: "AZURE_CLIENT_ID"
      value: "69a849fa-1e3f-46c3-8616-1cbc060ece11"

  volumeMounts: []

  volumes: []

  configs: []

  resources: {}
  replicaCount: null
  autoscaling: {}

  secretProviderClass:
    enabled: true
    secrets: []

  ingress: {}

  tolerations: []
  affinity: {}

###############
# webapp specific values
###############

webapp:
  name: webapp
  enabled: true
  service: {}
  image:
    repository: crpegasusshared.azurecr.io/chat-copilot-webapp
    tag: "latest"
  livenessProbe: {}
  readinessProbe: {}
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}
  env: []
  volumeMounts: []
  #   - name: manifest-volume
  #     mountPath: /srv/assets/manifests/federation.manifest.json
  #     subPath: federation.manifest.json

  volumes: []
  #   - name: manifest-volume
  #     configMap:
  #       name: q-pilot-webapp
  #       items:
  #         - key: federation.manifest.json
  #           path: federation.manifest.json
  #   - name: caddyfile-volume
  #     configMap:
  #       name: q-pilot-webapp
  #       items:
  #         - key: Caddyfile
  #           path: Caddyfile
  configs: []
  #   - config/dev/federation.manifest.json
  resources: {}
  replicaCount: null
  autoscaling: {}
  secretProviderClass: {}
  ingress:
    enabled: true
    hosts:
      - host: q-pilot-dev.pegasus.quartechlab.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - q-pilot-dev.pegasus.quartechlab.com
  tolerations: []
  affinity: {}

###############
# webapi specific values
###############

webapi:
  name: webapi

  enabled: true

  service: {}

  image:
    repository: crpegasusshared.azurecr.io/chat-copilot-webapi
    tag: "latest"

  livenessProbe: {}
  readinessProbe: {}

  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  env:
    - name: "KernelMemory__Services__AzureOpenAIEmbedding__APIKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: KernelMemory-Services-AzureOpenAIEmbedding-APIKey
    - name: "KernelMemory__Services__AzureOpenAIText__APIKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: KernelMemory-Services-AzureOpenAIText-APIKey
    - name: "ChatStore__Cosmos__ConnectionString"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: ChatStore-Cosmos-ConnectionString
    - name: "QAzureOpenAIChatConfig__OpenAIDeploymentConnections__0__ApiKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-OpenAIDeploymentConnections-0-ApiKey
    - name: "QAzureOpenAIChatConfig__OpenAIDeploymentConnections__1__ApiKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-OpenAIDeploymentConnections-1-ApiKey
    - name: "QAzureOpenAIChatConfig__OpenAIDeploymentConnections__2__ApiKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-OpenAIDeploymentConnections-2-ApiKey
    - name: "QAzureOpenAIChatConfig__AISearchDeploymentConnections__0__ApiKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-AISearchDeploymentConnections-0-ApiKey
    - name: "QAzureOpenAIChatConfig__AISearchDeploymentConnections__1__ApiKey"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-AISearchDeploymentConnections-1-ApiKey
    - name: "QAzureOpenAIChatConfig__BlobStorage__ConnectionString"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: QAzureOpenAIChatConfig-BlobStorage-ConnectionString
    - name: "KernelMemory__Services__AzureVision__Key"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: KernelMemory-Services-AzureVision-Key
    - name: "KernelMemory__Services__AzureVision__Endpoint"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key: KernelMemory-Services-AzureVision-Endpoint
    - name: "AZURE_CLIENT_SECRET"
      valueFrom:
        secretKeyRef:
          name: q-pilot-webapi-secret
          key:  q-pilot-client-secret
    - name: "APP_NAME"
      value: "webapi"

  volumeMounts:
    - name: appsettings-volume
      mountPath: /app/appsettings.json
      subPath: appsettings.json
    - name: appsettings-development-volume
      mountPath: /app/appsettings.Development.json
      subPath: appsettings.Development.json
    - name: secrets-store
      mountPath: "/mnt/secrets-store"
      readOnly: true

  volumes:
    - name: appsettings-volume
      configMap:
        name: q-pilot-webapi
        items:
          - key: appsettings.json
            path: appsettings.json
    - name: appsettings-development-volume
      configMap:
        name: q-pilot-webapi
        items:
          - key: appsettings.Development.json
            path: appsettings.Development.json
    - name: secrets-store
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "q-pilot-webapi"

  configs:
    - config/dev/appsettings.json
    - config/dev/appsettings.Development.json

  resources: {}
  replicaCount: null
  autoscaling: {}

  secretProviderClass:
    enabled: true
    secrets:
      [
        KernelMemory-Services-AzureOpenAIEmbedding-APIKey,
        KernelMemory-Services-AzureOpenAIText-APIKey,
        ChatStore-Cosmos-ConnectionString,
        QAzureOpenAIChatConfig-BlobStorage-ConnectionString,
        QAzureOpenAIChatConfig-OpenAIDeploymentConnections-0-ApiKey,
        QAzureOpenAIChatConfig-OpenAIDeploymentConnections-1-ApiKey,
        QAzureOpenAIChatConfig-OpenAIDeploymentConnections-2-ApiKey,
        QAzureOpenAIChatConfig-AISearchDeploymentConnections-0-ApiKey,
        QAzureOpenAIChatConfig-AISearchDeploymentConnections-1-ApiKey,
        KernelMemory-Services-AzureVision-Key,
        KernelMemory-Services-AzureVision-Endpoint,
        q-pilot-client-secret
      ]

  ingress:
    enabled: true
    hosts:
      - host: q-pilot-dev.api.pegasus.quartechlab.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - q-pilot-dev.api.pegasus.quartechlab.com

  tolerations: []
  affinity: {}
